<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rohit Kumar</title>
    <link>https://aquatiko.github.io/blog/</link>
    <description>Recent content on Rohit Kumar</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zn-Hans</language>
    <lastBuildDate>Wed, 26 Jun 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://aquatiko.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>First Evaluation: 1 months into GSoC</title>
      <link>https://aquatiko.github.io/blog/2019-06/first-evaluation-1-months-into-gsoc/</link>
      <pubDate>Wed, 26 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://aquatiko.github.io/blog/2019-06/first-evaluation-1-months-into-gsoc/</guid>
      <description>This month went by faster than I expected. Why? It&amp;rsquo;s because I had too much to do and I was excited enough to write the code and see how things will turn out. Will my ideas to create things in a certain way reflect in my code or not? What would I do if I spent too much time working on the wrong approach? Will I miss the deadline and how would I cope if I did? How my mentors evaluate me until now? Do I reach the full potential of a GSoC student? These things did trouble me a bit but luck was on my side and my mentors were super helpful to guide me through this.
What things I achieved before my first evaluation? 1. Reproject.jl This was the trickiest part of my whole project, an important one too. This is a Julia package with 400+ lines of code which I wrote from scratch with my mentor reviewing my work from time to time.
List of PRs: #1, #2, #3
Why this package? On a high level, we are trying to achieve a way to represent Astronomical Images in Julia at AstroImages.jl (another new repository I&amp;rsquo;m working). Astronomical Images are a bit different from our everyday images in JPEG or PNG format, it can be very big in size, carries useful information about the image and comes in its own format i.</description>
    </item>
    
    <item>
      <title>2 weeks into GSoC</title>
      <link>https://aquatiko.github.io/blog/2019-06/2-weeks-into-gsoc/</link>
      <pubDate>Wed, 12 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://aquatiko.github.io/blog/2019-06/2-weeks-into-gsoc/</guid>
      <description>I had a feeling in the community bonding period that something will mess up at the start of the coding period as I had the toughest part lined at the start. The same did happen&amp;hellip; At the start, I had two weeks for porting reproject from Astropy. In short what it does is, it align two different astronomical images into a single frame of reference. While capturing an astronomical image, different conditions(like the position of the sky) affects the image captured. Thus, two images of the same region of interest will not be exactly similar when taken under different conditions. It may require to rotate, translate or interpolate them to get the result.
So where the difficulty arises for me? Astropy is a very mature library but support for Astronomy in Julia is still growing. This means that I can&amp;rsquo;t port line by line, I need to be creative. Plus the utility functions which the python version of reproject calls was not present in Julia. So at a basic level, it meant I had to port every other function in Julia or get a workaround using the existing things. So a project part which seemed within bounds at the beginning started growing exponentially and I haven&amp;rsquo;t planned this.</description>
    </item>
    
    <item>
      <title>Community Bonding Period: JuliaAstro</title>
      <link>https://aquatiko.github.io/blog/2019-05/community-bonding-period-juliaastro/</link>
      <pubDate>Mon, 27 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://aquatiko.github.io/blog/2019-05/community-bonding-period-juliaastro/</guid>
      <description>Why this Community Bonding Period(CBP)? According to Google,
&amp;ldquo;The community bonding period is when you work out further details of your project plan, schedule regular upcoming meetings with your mentor, get your development environment set up and start to engage with the project’s open source community. This is the time to work with your mentor on setting expectations for your interactions and how your progress is measured during the GSoC program. Hopefully, you have already participated in many discussions with your mentor, clarifying the project and expectations during the application period, but now is the time to finalize your plans.&amp;rdquo;
How this period went for me? It really fulfilled everything it was supposed to. Hats off to Google for this initiative of adding an extra month in the timeline. So, In my whole project, I had most of the things figured out, like what will go in, what will go out, how will it be structured and implemented. Despite this, it follows a big BUT&amp;hellip;
But a very crucial and challenging task is to port reproject from astropy. It&amp;rsquo;s like the most important feature of the project and requires some complex work like understanding the python version and figuring out a Julian way to write it.</description>
    </item>
    
    <item>
      <title>WCS.jl Package Analysis</title>
      <link>https://aquatiko.github.io/blog/2019-05/wcs.jl-package-analysis/</link>
      <pubDate>Mon, 20 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://aquatiko.github.io/blog/2019-05/wcs.jl-package-analysis/</guid>
      <description>Why WCS.jl package After the introduction of package FITSIO.jl for handling FITS files in Julia, another package was required to manage the World Coordinate System(WCS) transformations of a FITS object. The WCS info. is present in the header of one of the HDU(s) of a FITS file. These transformations map the pixel locations in an image to their real-world units, such as their position on the sky sphere. These transformations can work both forward (from pixel to sky) and backward (from sky to pixel). This package wraps the WCSLIB C library.
Installation WCS.jl is a registered package in Julia and can be installed from package manager as: pkg&amp;gt; add WCS
or it can be build from source as: julia&amp;gt; Pkg.clone(&amp;quot;https://github.com/JuliaAstro/WCS.jl&amp;quot;)
Usage After installing the package, you can start using it with julia&amp;gt; using WCS
Creating a WCS object WCS objects are defined by a type WCSTransform which contains the following fields based on the information present in the header:
 flag::Cint naxis::Cint crpix::Ptr{Cdouble} pc::Ptr{Cdouble} cdelt::Ptr{Cdouble} crval::Ptr{Cdouble} cunit::Ptr{Cvoid} ctype::Ptr{Cvoid} lonpole::Cdouble latpole::Cdouble restfrq::Cdouble restwav::Cdouble npv::Cint npvmax::Cint pv::Ptr{PVCard} nps::Cint npsmax::Cint ps::Ptr{PSCard} cd::Ptr{Cdouble} crota::Ptr{Cdouble} altlin::Cint velref::Cint alt::NTuple{4, UInt8} colnum::Cint colax::Ptr{Cint} cname::Ptr{Cvoid} crder::Ptr{Cdouble} csyer::Ptr{Cdouble} czphs::Ptr{Cdouble} cperi::Ptr{Cdouble} wcsname::NTuple{72, UInt8} timesys::NTuple{72, UInt8} trefpos::NTuple{72, UInt8} trefdir::NTuple{72, UInt8} plephem::NTuple{72, UInt8} timeunit::NTuple{72, UInt8} dateref::NTuple{72, UInt8} mjdref::NTuple{2, Cdouble} timeoffs::Cdouble dateobs::NTuple{72, UInt8} datebeg::NTuple{72, UInt8} dateavg::NTuple{72, UInt8} dateend::NTuple{72, UInt8} mjdobs::Cdouble mjdbeg::Cdouble mjdavg::Cdouble mjdend::Cdouble jepoch::Cdouble bepoch::Cdouble tstart::Cdouble tstop::Cdouble xposure::Cdouble telapse::Cdouble timsyer::Cdouble timrder::Cdouble timedel::Cdouble timepixr::Cdouble obsgeo::NTuple{6, Cdouble} obsorbit::NTuple{72, UInt8} radesys::NTuple{72, UInt8} equinox::Cdouble specsys::NTuple{72, UInt8} ssysobs::NTuple{72, UInt8} velosys::Cdouble zsource::Cdouble ssyssrc::NTuple{72, UInt8} velangl::Cdouble ntab::Cint nwtb::Cint tab::Ptr{Cvoid} # Ptr{tabprm} wtb::Ptr{Cvoid} # Ptr{wtbarr} lngtyp::NTuple{8, UInt8} lattyp::NTuple{8, UInt8} lng::Cint lat::Cint spec::Cint cubeface::Cint types::Ptr{Cint} lin::linprm cel::celprm spc::spcprm err::Ptr{WCSErr} m_flag::Cint m_naxis::Cint m_crpix::Ptr{Cdouble} m_pc::Ptr{Cdouble} m_cdelt::Ptr{Cdouble} m_crval::Ptr{Cdouble} m_cunit::Ptr{Cvoid} m_ctype::Ptr{Cvoid} m_pv::Ptr{PVCard} m_ps::Ptr{PSCard} m_cd::Ptr{Cdouble} m_crota::Ptr{Cdouble} m_colax::Ptr{Cint} m_cname::Ptr{Cvoid} m_crder::Ptr{Cdouble} m_csyer::Ptr{Cdouble} m_czphs::Ptr{Cdouble} m_cperi::Ptr{Cdouble} m_tab::Ptr{Cvoid} # Ptr{tabprm} m_wtb::Ptr{Cvoid} # Ptr{wtbarr}  Creating from scratch To create a WCSTransform from scratch, we can use the constructor like:</description>
    </item>
    
    <item>
      <title>What Coala Organization taught me: Reaching beyond the beginners threshold</title>
      <link>https://aquatiko.github.io/blog/2019-05/what-coala-organization-taught-me-reaching-beyond-the-beginners-threshold/</link>
      <pubDate>Tue, 14 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://aquatiko.github.io/blog/2019-05/what-coala-organization-taught-me-reaching-beyond-the-beginners-threshold/</guid>
      <description>So, you have finally convinced yourself to enter the realm of Open Source Development. But wait, the initial threshold of getting to speed in this domain is feeling too difficult for you. You are struggling to do your very first contribution in a big Open-Source repository. The huge code-base is too overwhelming and difficult to understand. The issues marked as simple are also too difficult to comprehend. There are just too many things you still don&amp;rsquo;t know. The list of things you are seeing for the first time is growing day by day. It seems it&amp;rsquo;s a bad choice after all?
So my dear open-sorcerer, have some hope. This feeling is mutual with at-least 60% of the people out there. It always starts with a bumpy road but if you can cross that part, believe me, the road ahead is smoother than you can imagine.
I started with OSS on 15th Sept with zero knowledge of this domain, I just knew some of the features of GitHub GUI. My first PR was to NLTK on 22nd Sept and for that whole week, I was struggling to just get my first PR in. The issue tracker and the vast code-base to work on was not intuitive enough to get past that threshold.</description>
    </item>
    
    <item>
      <title>GSoC Initilization: The results day</title>
      <link>https://aquatiko.github.io/blog/2019-05/gsoc-initilization-the-results-day/</link>
      <pubDate>Thu, 09 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://aquatiko.github.io/blog/2019-05/gsoc-initilization-the-results-day/</guid>
      <description>It dosen&amp;rsquo;t seems possible until it&amp;rsquo;s done!! The day 6th of March 2019 will always be remembered when dreams actually came true.
We were having our end semester exams and results were going to be displayed at 11:30 PM according to our time-zone. We had the last exam tomorrow at 4 pm and the pressure of GSoC was intense. I came to my hostel dorm after finishing the 4 pm exam that day and I had to study for the last one. I have submitted two proposals for GSoC, one for JuliaText in JuliaLang and other to JuliaAstro in OpenAstronomy. I have worked equally for both of them, maybe a bit more for JuliaText&amp;rsquo;s NLP one. I had an assurance that one of them might get in as I gave my all for them. Strict personal deadlines, iteration of thoughts and planning the best possible ways to strengthen my proposal.
So, I started studying for the last exam around 7-8pm and at the start, I wasn&amp;rsquo;t feeling the pressure of GSoC that much. And as time passed, minutes seemed like hours and the panic grew stronger. I just couldn&amp;rsquo;t wait till 11:30 PM. So, I was in a state where I couldn&amp;rsquo;t focus enough to let that thought go away and study for the last exam.</description>
    </item>
    
    <item>
      <title>Google Collaboratory: Your PitStop</title>
      <link>https://aquatiko.github.io/blog/2019-04/google-collaboratory-your-pitstop/</link>
      <pubDate>Mon, 15 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://aquatiko.github.io/blog/2019-04/google-collaboratory-your-pitstop/</guid>
      <description>Are you starting on your deep learning journey and things are processing slow!! Or you are already on one and don’t want to buy costly computers for your deep learning endeavors or the cloud computation resources like AWS ,Azure or GCP seems too complicated? Well, Google’s collaboratory is pretty easy and handy tool which will get you started right away!!
So what is Google’s Collaboratory? It is a free cloud based service by Google for developers to experiment with their snippets of python codes. It is a Jupyter notebook type interface which you can use just as your standard python compiler but with more features. Also on top of that it provides you a free Tesla K80 GPU for a run-time of 12hours and after that you only have to re-connect with the service again with a single click!! So in short, unless you have a huge task which would take huge resources and time, you can use Google collab for a faster runtime.
Getting Started Head to your google drive-&amp;gt; click on “New(+)” sign -&amp;gt; click on “More” -&amp;gt; click on “Connect more apps”-&amp;gt; search “collaboratory” and add it. (One time process) You can create a new notebook(compiler) by-&amp;gt; click on “New(+)” sign -&amp;gt; click on “more” -&amp;gt; click on “collaboratory”.</description>
    </item>
    
    <item>
      <title>Why I started Open-Source</title>
      <link>https://aquatiko.github.io/blog/2019-04/why-i-started-open-source/</link>
      <pubDate>Fri, 12 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://aquatiko.github.io/blog/2019-04/why-i-started-open-source/</guid>
      <description>After more than 6 months into this, this question almost seems silly to me&amp;hellip; I remember the first week of September 2018, I was desperate to find just a single good enough reason for convincing me to contribute to the Open-Source community. I wanted to participate in GSoC but the idea of spending my own personal time into someone else project was not convincing me. Even after this, something changed and convinced me to do so. I hope by the end of it, you too will be convinced or at least give it a thought!!
Back in those days, I was exploring the depths of Deep Learning. My interest was divided among the most exciting domains popular those days. But somehow NLP was the top one. It was fascinating and enough to keep me there. The same year, two of my seniors became the first batch to crack GSoC from my college. I can say, it totally sparked hope in others.
I remember the day 15th September, I decided I too want it and started preparing for it. I know it was way too early to aim for it, but at that time I was familiar only with some markdown syntax and basic GitHub interface.</description>
    </item>
    
  </channel>
</rss>